<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:lang="http://www.springframework.org/schema/lang"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
       http://www.springframework.org/schema/util
       http://www.springframework.org/schema/util/spring-util.xsd
       http://www.springframework.org/schema/lang
       http://www.springframework.org/schema/lang/spring-lang-2.0.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

    <context:annotation-config/>
    <context:component-scan base-package="com.filippov.rm"/>

    <bean id="duke"
          class="com.filippov.rm.common.perfomers.Juggler">
        <constructor-arg value="6"/>
    </bean>

    <bean id="sonnet29"
          class="com.filippov.rm.common.helpcomponents.Sonnet29">
    </bean>

    <bean id="duke2"
          class="com.filippov.rm.common.perfomers.PoeticJuggler">
        <constructor-arg value="15"/>
        <constructor-arg ref="sonnet29"/>
    </bean>

    <bean id="stage"
          class="com.filippov.rm.common.helpcomponents.Stage"
          factory-method="getInstance"/>

    <bean id="test"
          class="com.filippov.rm.common.Test"
          factory-method="getInstance"/>

    <!--<bean id="test2"-->
    <!--class="com.filippov.rm.common.Test"-->
    <!--factory-method="getInstance"/>-->

    <bean id="duditorium"
          class="com.filippov.rm.common.helpcomponents.Auditorium"/>


    <bean id="kenny"
          class="com.filippov.rm.common.perfomers.Instrumentalist">
        <property name="song" value="Znaish li ty"/>
        <property name="instrument">
            <bean class="com.filippov.rm.common.helpcomponents.Saxophone"/>
        </property>
    </bean>

    <bean id="kenny2"
          class="com.filippov.rm.common.perfomers.Instrumentalist"
          p:song="Kakay nezhnost"
          p:instrument-ref="saxophone"/>

    <bean id="Henry"
          class="com.filippov.rm.common.perfomers.OneManBand">
        <property name="instruments">
            <set>
                <ref bean="guitar"/>
                <ref bean="guitar"/>
                <ref bean="piano"/>
                <ref bean="saxophone"/>
            </set>
        </property>
    </bean>


    <bean id="Harry" class="com.filippov.rm.common.magican.Magician">
        <property name="magicWords" value="kribli krabli bum"/>
        <property name="magicBox" ref="magicBoxWithSurprise"/>
    </bean>

    <bean id="magicBoxWithSurprise" class="com.filippov.rm.common.magican.MagicBoxImpl">
        <replaced-method name="getContents" replacer="tigerFromBox"/>
    </bean>

    <bean id="tigerFromBox" class="com.filippov.rm.common.magican.TigerFromBox"/>


    <bean id="copySong"
          class="com.filippov.rm.common.perfomers.CopySong">
        <property name="song" value="#{kenny2.song.toUpperCase() + '  oooo  ' +T(java.lang.Math).PI}"/>
    </bean>

    <bean id="commonInstrumentalist"
          class="com.filippov.rm.common.perfomers.Instrumentalist"
          abstract="true">
        <property name="instrument" ref="saxophone"/>
        <property name="song" value="Bla bla"/>
    </bean>

    <bean id="LookUpBoy" class="com.filippov.rm.common.perfomers.Instrumentalist">
        <property name="song" value="kroshka moy"/>
        <lookup-method name="getInstrument" bean="piano"/>

    </bean>

    <!--<bean id="commonProperty" abstract="true">-->
    <!--<property name="additionalSong" value="aaa aaa"/>-->
    <!--</bean>-->

    <bean id="saxophonist1" parent="commonInstrumentalist"/>
    <bean id="saxophonist2" parent="commonInstrumentalist"/>


    <bean id="saxophone"
          class="com.filippov.rm.common.helpcomponents.Saxophone"/>

    <bean id="piano"
          class="com.filippov.rm.common.helpcomponents.Piano"/>

    <bean id="guitar"
          class="com.filippov.rm.common.helpcomponents.Guitar"/>


    <bean id="cities"
          class="com.filippov.rm.common.world.Cities">
        <property name="citiesList" ref="citiesList"/>
        <property name="specialCity" value="#{citiesList.^[population ge 6000000]}"/>
        <property name="bigCities" value="#{citiesList.?[population ge 6000000]}"/>
    </bean>

    <util:list id="citiesList">
        <bean class="com.filippov.rm.common.world.City"
              p:country="Russia"
              p:name="SPb"
              p:population="6000000"/>
        <bean class="com.filippov.rm.common.world.City"
              p:country="Russia"
              p:name="Moscow"
              p:population="12000000"/>
        <bean class="com.filippov.rm.common.world.City"
              p:country="Russia"
              p:name="Sosnovy-Bor"
              p:population="60000"/>
        <bean class="com.filippov.rm.common.world.City"
              p:country="Russia"
              p:name="Vyborg"
              p:population="60000"/>
    </util:list>


    <bean id="standuper" class="com.filippov.rm.common.dynamicchanges.StandUpComic">
        <!--<property name="story"  ref="story"/>-->
        <constructor-arg ref="story"/>
    </bean>

    <!--<lang:groovy id="story"-->
    <!--script-source="classpath:scripts/Story2.groovy"/>-->

    <lang:bsh id="story"
              script-interfaces="com.filippov.rm.common.dynamicchanges.InterestingCase"
              refresh-check-delay="1000">
        <lang:inline-script>
            <![CDATA[
                void rememberStory() {
                     System.out.println("Beanshell from xml");
                }
              ]]>
        </lang:inline-script>
    </lang:bsh>

    <bean id="autowiredPerfomer" class="com.filippov.rm.common.perfomers.AutoWiredPerfomance"/>
    <!--<bean class="com.filippov.rm.common.helpcomponents.NewInstrument">-->
        <!--<qualifier value="newInstrument"/>-->
    <!--</bean>-->
    <!--<bean class="com.filippov.rm.common.helpcomponents.NewInstrument2">-->
        <!--<qualifier value="newInstrument"/>-->
    <!--</bean>-->
    <!--<bean id="story" class="com.filippov.rm.common.dynamicchanges.com.filippov.rm.common.dynamicchanges.Story2.groovy"/>-->


</beans>